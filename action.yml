name: 'Deploy Cloud Commerce to Firebase'
description: 'A GitHub Action to deploy https://github.com/ecomplus/cloud-commerce store to Firebase'

inputs:
  github-token:
    description: 'The `GITHUB_TOKEN` secret'
    required: true
  firebase-service-account:
    description: 'Firebase service account JSON'
    required: true

outputs: {}

runs:
  using: "composite"
  steps:
    - uses: actions/setup-node@v3
      with:
        node-version: 16
        cache: 'npm'

    - if: github.event_name == 'push'
      shell: bash
      run: npm i --location=global firebase-tools@^11.2.1

    - shell: bash
      run: npm ci --only=production

    - shell: bash
      working-directory: functions
      run: npm ci --only=production --no-optional

    - shell: bash
      run: npm run build

    - if: github.event_name == 'push'
      name: Deploy to Firebase live
      shell: bash
      env:
        FIREBASE_SERVICE_ACCOUNT: ${{ inputs.firebase-service-account }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        ECOM_AUTHENTICATION_ID: ${{ secrets.ECOM_AUTHENTICATION_ID }}
        ECOM_API_KEY: ${{ secrets.ECOM_API_KEY }}
      run: |
        export GAC_FILENAME=".gac-$RANDOM.json"
        echo $FIREBASE_SERVICE_ACCOUNT > $GAC_FILENAME
        printf "ECOM_AUTHENTICATION_ID=$ECOM_AUTHENTICATION_ID
        ECOM_API_KEY=$ECOM_API_KEY
        GITHUB_TOKEN=$GITHUB_TOKEN
        " > functions/.env
        GOOGLE_APPLICATION_CREDENTIALS=$GAC_FILENAME npm run deploy

    - if: github.event_name == 'pull_request'
      name: Deploy Firebase Hosting PR preview
      uses: FirebaseExtended/action-hosting-deploy@v0
      with:
        repoToken: ${{ inputs.github-token }}
        firebaseServiceAccount: ${{ inputs.firebase-service-account }}
